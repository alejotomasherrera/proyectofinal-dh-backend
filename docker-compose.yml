services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: digitalMonyHouse-db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - ./db/mysql_data:/var/lib/mysql
    networks:
      - dmh-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
        reservations:
          memory: 500m
          cpus: "0.2"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    container_name: elasticsearch-digitalMonyHouse
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=admin
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - dmh-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1"
        reservations:
          memory: 1g
          cpus: "0.5"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.16.5
    container_name: logstash
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
    ports:
      - "5044:5044"
    networks:
      - dmh-network
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - app-logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
        reservations:
          memory: 500m
          cpus: "0.2"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - dmh-network

  redis:
    image: redis:7.0
    container_name: redis-digitalMonyHouse
    restart: always
    ports:
      - "6379:6379"
    networks:
      - dmh-network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

  auth-service:
      build:
        context: ./auth-service
      ports:
        - "8082:8082"
      volumes:
        - ./auth-service:/usr/src/app
        - app-logs:/app/logs
      depends_on:
        mysql:
          condition: service_healthy
        redis:
          condition: service_healthy
      deploy:
        resources:
          limits:
            memory: 512m
            cpus: "0.5"
          reservations:
            memory: 256m
            cpus: "0.2"

  config-server:
      build:
        context: ./configServer
      ports:
        - "8888:8888"
      volumes:
        - app-logs:/app/logs
      deploy:
        resources:
          limits:
            memory: 512m
            cpus: "0.5"
          reservations:
            memory: 256m
            cpus: "0.2"

  cuenta-service:
    build:
      context: ./cuenta-service
    ports:
      - "8084:8084"
    volumes:
      - ./cuenta-service:/usr/src/app
      - app-logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

  service-api-gateway:
    build:
      context: ./service-api-gateway
    ports:
      - "8081:8081"
    volumes:
      - app-logs:/app/logs
    depends_on:
      servicio-eurekaserver:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

  servicio-eurekaserver:
    build:
      context: ./servicio-eurekaServer
    ports:
      - "8761:8761"
    volumes:
      - app-logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

  servicio-tarjetas:
    build:
      context: ./servicio-tarjetas
    ports:
      - "8086:8086"
    volumes:
      - ./servicio-tarjetas:/usr/src/app
      - app-logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

  servicio-transacciones:
    build:
      context: ./servicio-transacciones
    ports:
      - "8085:8085"
    volumes:
      - ./servicio-transacciones:/usr/src/app
      - app-logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

  servicio-usuarios:
    build:
      context: ./servicio-usuarios
    ports:
      - "8083:8083"
    volumes:
      - ./servicio-usuarios:/usr/src/app
      - app-logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m
          cpus: "0.2"

networks:
  dmh-network:
    driver: bridge

volumes:
  app-logs: # Volumen nombrado para los logs
  mysql-data:
    driver: local
  elasticsearch-data:
    driver: local
  redis-data:
    driver: local